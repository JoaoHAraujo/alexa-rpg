{
	"components": {
		"examples": {},
		"headers": {},
		"parameters": {},
		"requestBodies": {},
		"responses": {},
		"schemas": {
			"Environment": {
				"enum": [
					"development",
					"homolog",
					"production"
				],
				"type": "string"
			},
			"IHealthStatus": {
				"properties": {
					"app": {
						"type": "string"
					},
					"uptime": {
						"type": "number",
						"format": "double"
					},
					"now": {
						"type": "string"
					},
					"env": {
						"$ref": "#/components/schemas/Environment"
					},
					"databaseOn": {
						"type": "boolean"
					}
				},
				"required": [
					"app",
					"uptime",
					"now",
					"env"
				],
				"type": "object",
				"additionalProperties": false
			},
			"interfaces.IHttpActionResult": {
				"properties": {},
				"type": "object",
				"additionalProperties": false
			},
			"StoryModel": {
				"properties": {
					"id": {
						"type": "string"
					},
					"title": {
						"type": "string"
					},
					"isActive": {
						"type": "boolean"
					},
					"createdAt": {
						"anyOf": [
							{
								"type": "string",
								"format": "date-time"
							},
							{
								"type": "string"
							}
						]
					},
					"updatedAt": {
						"anyOf": [
							{
								"type": "string",
								"format": "date-time"
							},
							{
								"type": "string"
							}
						]
					},
					"deletedAt": {
						"anyOf": [
							{
								"type": "string",
								"format": "date-time"
							},
							{
								"type": "string"
							}
						]
					}
				},
				"required": [
					"id",
					"title",
					"isActive"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Pick_StoryModel.Exclude_keyofStoryModel.id-or-createdAt-or-updatedAt-or-deletedAt__": {
				"properties": {
					"title": {
						"type": "string"
					},
					"isActive": {
						"type": "boolean"
					}
				},
				"required": [
					"title",
					"isActive"
				],
				"type": "object",
				"description": "From T, pick a set of properties whose keys are in the union K"
			},
			"Omit_StoryModel.id-or-createdAt-or-updatedAt-or-deletedAt_": {
				"$ref": "#/components/schemas/Pick_StoryModel.Exclude_keyofStoryModel.id-or-createdAt-or-updatedAt-or-deletedAt__",
				"description": "Construct a type with the properties of T except for those in type K."
			}
		},
		"securitySchemes": {
			"token": {
				"type": "apiKey",
				"description": "Token necessario para autenticação",
				"name": "token",
				"in": "cookie"
			}
		}
	},
	"info": {
		"title": "alexa_rpg_backoffice",
		"version": "1.0.0",
		"license": {
			"name": "MIT"
		},
		"contact": {}
	},
	"openapi": "3.0.0",
	"paths": {
		"/v1/health/status": {
			"get": {
				"operationId": "GetStatus",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IHealthStatus"
								}
							}
						}
					}
				},
				"tags": [
					"Health"
				],
				"security": [],
				"parameters": []
			}
		},
		"/v1/health/status/readiness": {
			"get": {
				"operationId": "StatusAll",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/interfaces.IHttpActionResult"
								}
							}
						}
					}
				},
				"tags": [
					"Health"
				],
				"security": [],
				"parameters": []
			}
		},
		"/v1/story": {
			"post": {
				"operationId": "Create",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/StoryModel"
								}
							}
						}
					}
				},
				"tags": [
					"Story"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/Omit_StoryModel.id-or-createdAt-or-updatedAt-or-deletedAt_"
							}
						}
					}
				}
			}
		},
		"/v1/story/{idStory}": {
			"get": {
				"operationId": "GetById",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/StoryModel"
								}
							}
						}
					}
				},
				"tags": [
					"Story"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "idStory",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		}
	},
	"servers": [
		{
			"url": "/"
		}
	]
}